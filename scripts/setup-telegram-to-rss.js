#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ telegram-to-rss
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

const Logger = require('../src/utils/logger');

async function setupTelegramToRss() {
    const logger = new Logger();
    
    try {
        logger.start('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ telegram-to-rss —Å–∏—Å—Ç–µ–º—ã');
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
        logger.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...');
        try {
            execSync('docker --version', { stdio: 'pipe' });
            logger.success('Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        } catch (error) {
            logger.error('Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            process.exit(1);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
        logger.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose...');
        try {
            execSync('docker-compose --version', { stdio: 'pipe' });
            logger.success('Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        } catch (error) {
            logger.error('Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
            process.exit(1);
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        logger.info('–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...');
        const directories = [
            'data/telegram-sessions',
            'data/rsshub',
            'data/redis',
            'logs/telegram-to-rss'
        ];

        for (const dir of directories) {
            const dirPath = path.join(__dirname, '..', dir);
            if (!fs.existsSync(dirPath)) {
                fs.mkdirSync(dirPath, { recursive: true });
                logger.info(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        logger.info('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
        const requiredEnvVars = [
            'TELEGRAM_API_ID',
            'TELEGRAM_API_HASH',
            'TELEGRAM_PHONE'
        ];

        const missingVars = [];
        for (const envVar of requiredEnvVars) {
            if (!process.env[envVar]) {
                missingVars.push(envVar);
            }
        }

        if (missingVars.length > 0) {
            logger.warn('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
            missingVars.forEach(varName => {
                logger.warn(`  - ${varName}`);
            });
            logger.info('–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª');
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è telegram-to-rss
        const envPath = path.join(__dirname, '..', '.env.telegram');
        if (!fs.existsSync(envPath)) {
            const envContent = `# Telegram API Configuration
TELEGRAM_API_ID=your_telegram_api_id_here
TELEGRAM_API_HASH=your_telegram_api_hash_here
TELEGRAM_PHONE=your_phone_number_here
TELEGRAM_SESSION_STRING=your_session_string_here

# Telegram-to-RSS Configuration
UPDATE_INTERVAL=300000
MAX_POSTS_PER_CHANNEL=50
LOG_LEVEL=info

# RSSHub Configuration
NODE_ENV=production
CACHE_TYPE=redis
REDIS_URL=redis://redis:6379/
PUPPETEER_WS_ENDPOINT=ws://browserless:3000
`;
            fs.writeFileSync(envPath, envContent);
            logger.info('üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.telegram');
        }

        // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤
        logger.info('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤...');
        const channelsConfigPath = path.join(__dirname, '..', 'config/telegram-channels.json');
        if (fs.existsSync(channelsConfigPath)) {
            const channelsConfig = JSON.parse(fs.readFileSync(channelsConfigPath, 'utf8'));
            logger.success(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${Object.keys(channelsConfig).length} —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π`);
            
            // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–Ω–∞–ª–æ–≤
            const totalChannels = Object.values(channelsConfig).reduce((sum, channels) => sum + channels.length, 0);
            logger.info(`–í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: ${totalChannels}`);
        } else {
            logger.error('–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ extract-telegram-channels.js');
            process.exit(1);
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
        const startScriptPath = path.join(__dirname, '..', 'scripts/start-telegram-to-rss.sh');
        const startScriptContent = `#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ telegram-to-rss —Å–∏—Å—Ç–µ–º—ã

echo "üöÄ –ó–∞–ø—É—Å–∫ telegram-to-rss —Å–∏—Å—Ç–µ–º—ã..."

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f .env.telegram ]; then
    export \$(cat .env.telegram | grep -v '^#' | xargs)
    echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
else
    echo "‚ùå –§–∞–π–ª .env.telegram –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ Docker Compose
echo "üê≥ –ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.telegram.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f docker-compose.telegram.yml ps

echo "‚úÖ telegram-to-rss —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo "üì° RSS-—Ñ–∏–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "  - –ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è: http://localhost:8080/cardiology"
echo "  - –ü–µ–¥–∏–∞—Ç—Ä–∏—è: http://localhost:8080/pediatrics"
echo "  - –ì–∞—Å—Ç—Ä–æ—ç–Ω—Ç–µ—Ä–æ–ª–æ–≥–∏—è: http://localhost:8080/gastroenterology"
echo "  - –≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∏—è: http://localhost:8080/endocrinology"
echo "  - –ì–∏–Ω–µ–∫–æ–ª–æ–≥–∏—è: http://localhost:8080/gynecology"
echo "  - –ù–µ–≤—Ä–æ–ª–æ–≥–∏—è: http://localhost:8080/neurology"
echo "  - –¢–µ—Ä–∞–ø–∏—è: http://localhost:8080/therapy"
`;
        fs.writeFileSync(startScriptPath, startScriptContent);
        fs.chmodSync(startScriptPath, '755');
        logger.info('üìÑ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞: scripts/start-telegram-to-rss.sh');

        // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        const stopScriptPath = path.join(__dirname, '..', 'scripts/stop-telegram-to-rss.sh');
        const stopScriptContent = `#!/bin/bash

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ telegram-to-rss —Å–∏—Å—Ç–µ–º—ã..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose -f docker-compose.telegram.yml down

echo "‚úÖ telegram-to-rss —Å–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
`;
        fs.writeFileSync(stopScriptPath, stopScriptContent);
        fs.chmodSync(stopScriptPath, '755');
        logger.info('üìÑ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: scripts/stop-telegram-to-rss.sh');

        logger.complete('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ telegram-to-rss –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        logger.info('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        logger.info('  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env.telegram');
        logger.info('  2. –ü–æ–ª—É—á–∏—Ç–µ Telegram API credentials –Ω–∞ https://my.telegram.org');
        logger.info('  3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: ./scripts/start-telegram-to-rss.sh');
        logger.info('  4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RSS-—Ñ–∏–¥—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ');

    } catch (error) {
        logger.error('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ telegram-to-rss:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
if (require.main === module) {
    setupTelegramToRss();
}

module.exports = setupTelegramToRss;
