#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—á–µ—Ä–µ–¥—å—é –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–æ–≤
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 3 –¥–Ω—è (–≤—Ç–æ—Ä–Ω–∏–∫ –∏ –ø—è—Ç–Ω–∏—Ü–∞)
 */

const Database = require('../src/utils/database');
const Logger = require('../src/utils/logger');
const fs = require('fs');
const path = require('path');

class RevisionQueue {
    constructor() {
        this.logger = new Logger();
        this.database = new Database();
        this.revisionDir = path.join(__dirname, '../data/revisions');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏
     */
    async createRevisionFiles() {
        try {
            this.logger.info('–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–æ–≤...');

            // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏
            if (!fs.existsSync(this.revisionDir)) {
                fs.mkdirSync(this.revisionDir, { recursive: true });
            }

            // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É
            const posts = await this.database.getPostsForRevision();
            
            if (posts.length === 0) {
                this.logger.info('–ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
                return;
            }

            this.logger.info(`–ù–∞–π–¥–µ–Ω–æ ${posts.length} –ø–æ—Å—Ç–æ–≤ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏`);

            // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞
            for (const post of posts) {
                await this.createRevisionFile(post);
            }

            // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª
            await this.createIndexFile(posts);

            this.logger.info('–§–∞–π–ª—ã –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–∑–¥–∞–Ω—ã');

        } catch (error) {
            this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏:', error);
        }
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–∞
     */
    async createRevisionFile(post) {
        try {
            const fileName = `post_${post.id}_${post.specialization}.md`;
            const filePath = path.join(this.revisionDir, fileName);
            
            const content = this.generateRevisionFileContent(post);
            
            fs.writeFileSync(filePath, content, 'utf8');
            
            this.logger.info(`–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏: ${fileName}`);

        } catch (error) {
            this.logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–æ—Å—Ç–∞ ${post.id}:`, error);
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏
     */
    generateRevisionFileContent(post) {
        return `# –î–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç–∞ ${post.id}

## üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–µ

- **ID:** ${post.id}
- **–ó–∞–≥–æ–ª–æ–≤–æ–∫:** ${post.title}
- **–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:** ${post.specialization}
- **–¢–∏–ø:** ${post.type}
- **–°–∫–æ—Ä–∏–Ω–≥:** ${post.score}/25
- **–ò—Å—Ç–æ—á–Ω–∏–∫:** ${post.source_name}
- **URL:** ${post.source_url}
- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** ${new Date(post.created_date).toLocaleString('ru-RU')}
- **–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É:** ${new Date().toLocaleString('ru-RU')}

## üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ

${post.content}

## üîß –ó–∞–¥–∞—á–∏ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏

- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é —Ç–æ—á–Ω–æ—Å—Ç—å
- [ ] –£–ª—É—á—à–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Å—Ç–∞
- [ ] –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
- [ ] –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–ª–∏–Ω—É –ø–æ—Å—Ç–∞
- [ ] –î–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã

## üìù –ó–∞–º–µ—Ç–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞

${post.moderator_notes || '–ó–∞–º–µ—Ç–∫–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã'}

## ‚úèÔ∏è –î–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ

<!-- –í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–¥–µ—Å—å -->

## üìä –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏

- **–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
- **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
- **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
- **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å:** ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê

## ‚úÖ –ß–µ–∫-–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π

- [ ] –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞
- [ ] –ü–æ—Å—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É –∫–∞–Ω–∞–ª–∞
- [ ] –î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- [ ] –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∞ –∏ —Å—Ç–∏–ª—å
- [ ] –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª–∏–Ω–∞ –ø–æ—Å—Ç–∞
- [ ] –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ö–µ—à—Ç–µ–≥–∏

---
*–§–∞–π–ª —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–µ–º–æ–¥–µ—Ä–∞—Ü–∏–∏*
*–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}*
`;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
     */
    async createIndexFile(posts) {
        try {
            const indexPath = path.join(this.revisionDir, 'README.md');
            
            const content = `# –û—á–µ—Ä–µ–¥—å –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–æ–≤

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

- **–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤ –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É:** ${posts.length}
- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** ${new Date().toLocaleString('ru-RU')}
- **–°–ª–µ–¥—É—é—â–∞—è —Å–µ—Å—Å–∏—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏:** ${this.getNextRevisionDate()}

## üìã –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤

${posts.map(post => 
    `### ${post.specialization} - ${post.title}
- **ID:** ${post.id}
- **–¢–∏–ø:** ${post.type}
- **–°–∫–æ—Ä–∏–Ω–≥:** ${post.score}/25
- **–§–∞–π–ª:** [post_${post.id}_${post.specialization}.md](./post_${post.id}_${post.specialization}.md)
- **–ò—Å—Ç–æ—á–Ω–∏–∫:** ${post.source_name}
`
).join('\n')}

## üîß –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–æ—Ä–∞–±–æ—Ç–∫–µ

1. **–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –ø–æ—Å—Ç–∞** –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏
2. **–í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è** –≤ —Ä–∞–∑–¥–µ–ª "–î–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"
3. **–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏** (–∑–≤–µ–∑–¥–æ—á–∫–∏)
4. **–û—Ç–º–µ—Ç—å—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏** –≤ —á–µ–∫-–ª–∏—Å—Ç–µ
5. **–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª** –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

## üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤

–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏:

1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤:
   \`\`\`bash
   node scripts/process-revisions.js
   \`\`\`

2. –î–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–µ–º–æ–¥–µ—Ä–∞—Ü–∏—é

## ‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ

- **–î–æ—Ä–∞–±–æ—Ç–∫–∞:** –í—Ç–æ—Ä–Ω–∏–∫ –∏ –ø—è—Ç–Ω–∏—Ü–∞
- **–ü—Ä–µ–º–æ–¥–µ—Ä–∞—Ü–∏—è:** –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 10:00
- **–ü—É–±–ª–∏–∫–∞—Ü–∏—è:** 8:00, 14:00, 20:00

---
*–§–∞–π–ª —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–µ–º–æ–¥–µ—Ä–∞—Ü–∏–∏*
`;
            
            fs.writeFileSync(indexPath, content, 'utf8');
            
            this.logger.info('–°–æ–∑–¥–∞–Ω –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏');

        } catch (error) {
            this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', error);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Å—Å–∏–∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∏
     */
    getNextRevisionDate() {
        const today = new Date();
        const dayOfWeek = today.getDay();
        
        // –í—Ç–æ—Ä–Ω–∏–∫ = 2, –ü—è—Ç–Ω–∏—Ü–∞ = 5
        let nextRevisionDay;
        if (dayOfWeek < 2) {
            nextRevisionDay = 2; // –í—Ç–æ—Ä–Ω–∏–∫
        } else if (dayOfWeek < 5) {
            nextRevisionDay = 5; // –ü—è—Ç–Ω–∏—Ü–∞
        } else {
            nextRevisionDay = 2; // –°–ª–µ–¥—É—é—â–∏–π –≤—Ç–æ—Ä–Ω–∏–∫
        }
        
        const daysUntilNext = (nextRevisionDay - dayOfWeek + 7) % 7;
        const nextDate = new Date(today);
        nextDate.setDate(today.getDate() + daysUntilNext);
        
        return nextDate.toLocaleDateString('ru-RU');
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
     */
    async processRevisedPosts() {
        try {
            this.logger.info('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã...');

            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –¥–æ—Ä–∞–±–æ—Ç–∫–∏
            const files = fs.readdirSync(this.revisionDir)
                .filter(file => file.startsWith('post_') && file.endsWith('.md'))
                .filter(file => file !== 'README.md');

            if (files.length === 0) {
                this.logger.info('–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
                return;
            }

            this.logger.info(`–ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
            for (const file of files) {
                await this.processRevisionFile(file);
            }

            this.logger.info('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

        } catch (error) {
            this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤:', error);
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–∏
     */
    async processRevisionFile(fileName) {
        try {
            const filePath = path.join(this.revisionDir, fileName);
            const content = fs.readFileSync(filePath, 'utf8');
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ—Å—Ç–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            const postId = parseInt(fileName.match(/post_(\d+)_/)[1]);
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
            const revisedContent = this.extractRevisedContent(content);
            
            if (!revisedContent) {
                this.logger.warn(`–§–∞–π–ª ${fileName} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è`);
                return;
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await this.database.updateRevisedPost(postId, revisedContent);
            
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª –≤ –∞—Ä—Ö–∏–≤
            const archiveDir = path.join(this.revisionDir, 'archive');
            if (!fs.existsSync(archiveDir)) {
                fs.mkdirSync(archiveDir, { recursive: true });
            }
            
            const archivePath = path.join(archiveDir, fileName);
            fs.renameSync(filePath, archivePath);
            
            this.logger.info(`–ü–æ—Å—Ç ${postId} —É—Å–ø–µ—à–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–µ–º–æ–¥–µ—Ä–∞—Ü–∏—é`);

        } catch (error) {
            this.logger.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ ${fileName}:`, error);
        }
    }

    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
     */
    extractRevisedContent(content) {
        const startMarker = '## ‚úèÔ∏è –î–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ';
        const endMarker = '## üìä –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏';
        
        const startIndex = content.indexOf(startMarker);
        const endIndex = content.indexOf(endMarker);
        
        if (startIndex === -1 || endIndex === -1) {
            return null;
        }
        
        const revisedContent = content.substring(startIndex + startMarker.length, endIndex)
            .replace(/<!-- –í–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–¥–µ—Å—å -->/g, '')
            .trim();
        
        return revisedContent || null;
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
     */
    async run() {
        try {
            await this.database.initialize();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            const action = process.argv[2];
            
            if (action === 'create') {
                await this.createRevisionFiles();
            } else if (action === 'process') {
                await this.processRevisedPosts();
            } else {
                this.logger.info('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node revision-queue.js [create|process]');
            }
        } catch (error) {
            this.logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ—Ä–∞–±–æ—Ç–∫–∏:', error);
        }
    }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    const revisionQueue = new RevisionQueue();
    revisionQueue.run();
}

module.exports = RevisionQueue;
